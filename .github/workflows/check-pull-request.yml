name: Check Pull Request

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - edited
      - reopened
      - synchronize
      - ready_for_review

jobs:
  pr-validator:
    name: Run Pull Request Checks
    runs-on: ubuntu-latest
    env:
      SHAREPOINT_TB25_TENANT_ID: ${{ secrets.SHAREPOINT_TB25_TENANT_ID }}
      SHAREPOINT_TB25_CLIENT_ID: ${{ secrets.SHAREPOINT_TB25_CLIENT_ID }}
      SHAREPOINT_TB25_CLIENT_SECRET: ${{ secrets.SHAREPOINT_TB25_CLIENT_SECRET }}
      SHAREPOINT_TB25_SITE_ID: ${{ secrets.SHAREPOINT_TB25_SITE_ID }}
      SHAREPOINT_TB25_LIST_ID: ${{ secrets.SHAREPOINT_TB25_LIST_ID }}
      SHAREPOINT_TB25_DRIVE_ID: ${{ secrets.SHAREPOINT_TB25_DRIVE_ID }}
      SHAREPOINT_TB25_FOLDER_PATH: 'Digital Applications/TB25'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm

      - name: Install Ghostscript
        run: |
          sudo apt-get update
          sudo apt-get install -y ghostscript

      - name: Install dependencies and run checks
        run: |
          npm ci
          npm audit --omit=dev
          npm run format:check
          npm run lint
          npm test

      - name: Start backend and dependencies
        run: |
          docker compose -f compose.yml up -d
          sleep 20  # give services time to fully start

      - name: Run Postman tests against container
        run: npm run test:local

      - name: SonarCloud Scan
        if: github.actor != 'dependabot[bot]'
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Tear down containers
        if: always()
        run: docker compose -f compose.yml down --volumes